{
  "title": "Portfolio",
  "navbar": {
    "links": [
      {
        "text": "Home",
        "href": "#"
      },
      {
        "text": "About",
        "href": "#About"
      },
      {
        "text": "Skills",
        "href": "#Skills"
      },
      {
        "text": "Portfolio",
        "href": "#Portfolio"
      },
      {
        "text": "Contact",
        "href": "#Contact"
      }
    ],
    "languageSelector": {
      "icon": "fa-solid fa-globe",
      "options": [
        {
          "text": "English",
          "value": "en-EN"
        },
        {
          "text": "Indonesian",
          "value": "in-ID"
        }
      ]
    },
    "menuButton": {
      "icon": "fa fa-bars"
    }
  },
  "menuBar": {
    "links": [
      {
        "icon": "fa fa-home",
        "href": "#"
      },
      {
        "icon": "fa fa-user",
        "href": "#About"
      },
      {
        "icon": "fa-solid fa-code",
        "href": "#Skills"
      },
      {
        "icon": "fa-solid fa-file-code",
        "href": "#Portfolio"
      },
      {
        "icon": "fa fa-message",
        "href": "#Contact"
      }
    ]
  },
  "header": {
    "greeting": "Hi. I'm Ari Zidan",
    "description": "I am a technology professional with a wide range of skills in software development, data analysis, and database management. With strong communication skills, high levels of responsibility, and the ability to work in a team, I am able to overcome complex challenges with a structured and analytical approach. My experience in using various programming languages ​​and modern technology tools allows me to create efficient and innovative solutions to meet business needs.",
    "buttons": [
      {
        "text": "Curriculum Vitae",
        "href": "BE-01-EN.pdf",
        "class": "btn btn-white"
      },
      {
        "text": "Hire Me",
        "href": "mailto:zidanerizal17@gmail.com",
        "class": "HireMe btn btn-white"
      }
    ],
    "image": "profile.jpeg",
    "socialLinks": [
      {
        "icon": "fab fa-instagram",
        "href": "https://www.instagram.com/z.id21"
      },
      {
        "icon": "fab fa-whatsapp",
        "href": "https://wa.me/6281529474830?text=Hi bruh, can we talk about..."
      },
      {
        "icon": "fab fa-linkedin",
        "href": "https://www.linkedin.com/in/arizidan"
      },
      {
        "icon": "fab fa-github",
        "href": "https://github.com/arizdn234"
      }
    ]
  },
  "about": {
    "title": "About Me",
    "cards": [
      {
        "icon": "fa-solid fa-handshake",
        "title": "Teamwork",
        "description": "In teamwork, I feel that working together makes any task easier and more enjoyable for me."
      },
      {
        "icon": "fa-solid fa-people-arrows",
        "title": "Communication",
        "description": "My communication skills allow me to interact with people easily, even in casual conversations about everyday things."
      },
      {
        "icon": "fa-solid fa-clock-rotate-left",
        "title": "Time Management",
        "description": "With good time management skills, I maintain focus and prioritize for best results."
      }
    ],
    "subtitle": "Software Developer",
    "paragraphs": [
      "In software development, I have worked extensively with various programming languages such as Python, JavaScript, Go, PHP, and SQL. This versatility allows me to develop, test, and maintain software applications that are both reliable and scalable. Whether it's building backend systems or developing web applications, I bring a thorough understanding of software architecture and best practices.",
      "In the realm of data analysis, my skills include collecting, processing, and interpreting data to derive actionable insights. I am proficient in using tools like Jupyter for interactive computing and data science, enabling me to analyze data efficiently and effectively communicate findings to stakeholders.",
      "When it comes to database management, I have hands-on experience with relational databases like PostgreSQL and MySQL, as well as NoSQL databases such as MongoDB. My knowledge of Object-Relational Mappers (ORMs) like Sequelize.js, Prisma, and SQLAlchemy allows me to bridge the gap between application code and database operations, ensuring data is stored, retrieved, and manipulated in a seamless and efficient manner.",
      "Beyond technical skills, I pride myself on my strong communication abilities, which enable me to articulate complex technical concepts to both technical and non-technical audiences. My sense of responsibility ensures that I am committed to delivering high-quality work on time, while my collaborative nature allows me to thrive in team environments, contributing to the successful completion of projects.",
      "Furthermore, my structured and analytical approach to problem-solving empowers me to tackle complex challenges by breaking them down into manageable tasks. I focus on understanding the underlying issues before devising innovative solutions that align with business objectives.",
      "My experience with modern technology tools, including Docker for containerization, GitHub for version control and collaboration, and Postman for API testing, equips me with the ability to build, deploy, and maintain applications in a way that is both efficient and aligned with industry standards.",
      "In summary, my diverse skill set and experience allow me to create effective and innovative solutions tailored to meet the specific needs of any business. I am passionate about technology and constantly seeking to improve my skills to stay ahead in this ever-evolving field."
    ],
    "expandButton": {
      "expandTrue": "See More",
      "expandFalse": "Hide"
    },
    "ctaButton": {
      "text": "Hire Me",
      "href": "#Contact",
      "class": "btn btn-white"
    }
  },
  "skills": {
    "title": "My Skills",
    "left": {
      "cards": [
        {
          "icon": "fa-brands fa-golang",
          "title": "Golang",
          "description": "From Golang, I learned about efficiency in programming and the importance of concurrency for building scalable and high-performance applications."
        },
        {
          "icon": "fab fa-python",
          "title": "Python",
          "description": "From Python, I learned about simplicity in programming and its application in web development, data analysis, and automation."
        },
        {
          "icon": "fa-brands fa-js",
          "title": "JavaScript",
          "description": "From JavaScript, I learned how to create interactivity and dynamic content on websites, as well as the importance of asynchronous programming."
        }
      ]
    },
    "right": {
      "subtitle": "What Can I do?",
      "skillBtn": [
        {
          "icon": "fas fa-database",
          "title": "&nbsp;PostgreSQL"
        },
        {
          "icon": "fas fa-database",
          "title": "&nbsp;MySQL"
        },
        {
          "icon": "fas fa-database",
          "title": "&nbsp;SQLite"
        },
        {
          "icon": "fas fa-database",
          "title": "&nbsp;MongoDB"
        },
        {
          "icon": "fas fa-code",
          "title": "&nbsp;Sequelize.js (Node.js)"
        },
        {
          "icon": "fas fa-code",
          "title": "&nbsp;Prisma ORM (Node.js)"
        },
        {
          "icon": "fas fa-code",
          "title": "&nbsp;GORM (Go)"
        },
        {
          "icon": "fas fa-code",
          "title": "&nbsp;Eloquent (Laravel)"
        },
        {
          "icon": "fas fa-code",
          "title": "&nbsp;SQLAlchemy (Flask/Django)"
        },
        {
          "icon": "fas fa-laptop-code",
          "title": "&nbsp;Python"
        },
        {
          "icon": "fas fa-laptop-code",
          "title": "&nbsp;JavaScript"
        },
        {
          "icon": "fas fa-laptop-code",
          "title": "&nbsp;Go (Golang)"
        },
        {
          "icon": "fas fa-laptop-code",
          "title": "&nbsp;PHP"
        },
        {
          "icon": "fas fa-database",
          "title": "&nbsp;SQL"
        },
        {
          "icon": "fas fa-tools",
          "title": "&nbsp;Docker"
        },
        {
          "icon": "fas fa-database",
          "title": "&nbsp;Navicat"
        },
        {
          "icon": "fas fa-database",
          "title": "&nbsp;DBeaver"
        },
        {
          "icon": "fas fa-database",
          "title": "&nbsp;pgAdmin"
        },
        {
          "icon": "fas fa-cloud",
          "title": "&nbsp;Mongo Atlas"
        },
        {
          "icon": "fas fa-vial",
          "title": "&nbsp;Postman"
        },
        {
          "icon": "fab fa-github",
          "title": "&nbsp;GitHub"
        },
        {
          "icon": "fas fa-globe",
          "title": "&nbsp;Django (Python)"
        },
        {
          "icon": "fas fa-globe",
          "title": "&nbsp;Laravel (PHP)"
        },
        {
          "icon": "fas fa-globe",
          "title": "&nbsp;Flask (Python)"
        },
        {
          "icon": "fas fa-globe",
          "title": "&nbsp;FastAPI (Python)"
        },
        {
          "icon": "fas fa-globe",
          "title": "&nbsp;Express.js (Node.js)"
        },
        {
          "icon": "fas fa-globe",
          "title": "&nbsp;Gin Gonic (Go)"
        },
        {
          "icon": "fas fa-globe",
          "title": "&nbsp;Gofiber (Go)"
        },
        {
          "icon": "fab fa-bootstrap",
          "title": "&nbsp;Bootstrap (CSS)"
        },
        {
          "icon": "fas fa-paint-brush",
          "title": "&nbsp;Materialize CSS (CSS)"
        },
        {
          "icon": "fas fa-paint-brush",
          "title": "&nbsp;TailwindCSS (CSS)"
        },
        {
          "icon": "fas fa-code",
          "title": "&nbsp;Alpine.js (JavaScript)"
        },
        {
          "icon": "fas fa-code",
          "title": "&nbsp;Vite.js (JavaScript)"
        }
      ]
    }
  },
  "portfolio": {
    "title": "Recent Projects",
    "description": "During my experience learning in the world of academia and programming, I have managed to complete a number of relevant and significant projects.",
    "tabs": [
      {
        "name": "star",
        "text": "Star",
        "class": "tab-active"
      },
      {
        "name": "webapp",
        "text": "Web Application"
      },
      {
        "name": "webapi",
        "text": "Web API"
      },
      {
        "name": "other",
        "text": "Other"
      }
    ],
    "projects": [
      {
        "name": "star",
        "title": "Integrated E-Commerce Platform",
        "image": "uni-sell-1.svg",
        "description": "Our e-commerce platform is a comprehensive solution designed to facilitate both physical and digital product sales. It features a robust backend built with Laravel, a dynamic frontend developed with Vue.js, and specialized microservices handled by Express.js. The platform is containerized using Docker for consistent deployment and scalability. Key functionalities include product management, real-time inventory tracking, secure checkout, payment processing, and user reviews. This architecture ensures a scalable, maintainable, and user-friendly experience for managing and purchasing products online.",
        "technologies": [
          "Laravel (PHP Framework)",
          "Vue.js (JavaScript Framework)",
          "Express.js (Node.js Framework)",
          "Docker (Containerization)",
          "MySQL (Database)"
        ],
        "features": [
          "Product Catalog: Comprehensive management of product listings and categories.",
          "Shopping Cart and Checkout: Real-time cart updates, secure checkout, and multiple payment gateways.",
          "Payment Integration: Supports Stripe, PayPal, and other payment processors.",
          "Order and Inventory Management: Real-time order tracking and automatic inventory updates.",
          "Review and Rating System: Allows user reviews and ratings with moderation features."
        ],
        "contribution": "I developed the integrated e-commerce platform, implementing Laravel for backend services, Vue.js for frontend, and Express.js for API microservices. I also managed Docker containerization for consistent deployment environments and integrated various technologies to ensure scalability and maintainability.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/uni-sell",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/uni-sell",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "star",
        "title": "AI-Enhanced CSV Query Web Application",
        "image": "",
        "description": "This web application allows users to interact with CSV data using AI models. Users can log in, view the parsed CSV data, and ask questions answered by AI models, integrating Google’s Gemini and Hugging Face’s Tapas for data-driven responses.",
        "technologies": [
          "Go (Golang)",
          "Gin Web Framework",
          "Google Generative AI Go SDK",
          "Hugging Face API for Tapas model",
          "Google Tapas Model",
          "Google Gemini Model"
        ],
        "features": [
          "User Authentication and Verification: Secure login system with a verification step.",
          "CSV Data Parsing and Display: Reads CSV files, parses them into a map format, and displays column data with example rows.",
          "AI Model Integration: Uses Hugging Face’s Tapas model to answer natural language queries from CSV data and Google’s Gemini model to provide conversational recommendations.",
          "Dynamic Interaction: Users can ask questions to AI for insights or recommendations based on CSV data."
        ],
        "contribution": "I developed the web application to read CSV data, implement AI models for answering questions and providing recommendations, and manage user interactions effectively using Go and related technologies.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/AI-Enhanced-CSV-Query-Web-Application",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/AI-Enhanced-CSV-Query-Web-Application",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "star",
        "title": "Authentication System (Golang, Gin)",
        "image": "web-api-default.svg",
        "description": "A user authentication system built with the Gin framework in Golang, featuring JWT-based authorization and CRUD operations for user data using SQLite and GORM.",
        "technologies": [
          "Golang",
          "Gin Framework",
          "GORM",
          "SQLite",
          "JWT",
          "Ginkgo",
          "Gomega"
        ],
        "features": [
          "JWT-based Authentication and Authorization",
          "Password Hashing for Secure Data Storage",
          "SQLite Database with GORM ORM",
          "Comprehensive CRUD Operations for User Management",
          "Unit Testing with Ginkgo and Gomega",
          "Modular Project Structure with Clear Separation of Concerns",
          "RESTful API Endpoints with Secure Access Controls",
          "User Session Management with Cookie-based JWT Tokens"
        ],
        "contribution": "Designed and implemented a robust authentication and user management system in Golang using the Gin framework. Key contributions include developing JWT-based authentication for secure access control, integrating SQLite with GORM for effective database management, and setting up comprehensive testing frameworks (Ginkgo and Gomega) to ensure code reliability. Structured the project to follow best practices with modular components, ensuring maintainability and scalability.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/crud-users-and-login-system-with-gin",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/crud-users-and-login-system-with-gin",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "star",
        "title": "Task Tracker Plus",
        "image": "ttp.png",
        "description": "Task Tracker Plus is a monolithic application built using Go (Golang) for managing study schedules. It provides REST APIs with full CRUD capabilities for managing users, tasks, and categories, and follows the MVC (Model-View-Controller) architecture.",
        "technologies": [
          "Go (Golang)",
          "REST API",
          "MVC Architecture"
        ],
        "features": [
          "Backend Development (Server): Developed and implemented REST APIs to manage Users, Tasks, and Categories with full CRUD operations and user authentication.",
          "Frontend Development (Client): Built user interfaces with MVC pattern including login, registration, dashboard, and management pages for tasks and categories."
        ],
        "contribution": "I contributed to the backend development by implementing REST APIs for managing users, tasks, and categories. I ensured secure user authentication and full CRUD functionality using the Go programming language and MVC architecture.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/Final-Course-Project-TTP",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/Final-Course-Project-TTP",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "star",
        "title": "Bookstore REST API",
        "image": "web-api-default.svg",
        "description": "A robust and versatile Nodejs-based RESTful API designed to manage a bookstore, providing endpoints for user account management, and CRUD operations for books.",
        "technologies": [
          "Node.js",
          "Express",
          "PostgreSQL",
          "Sequelize",
          "bcryptjs",
          "jsonwebtoken"
        ],
        "features": [
          "User account registration and login",
          "Retrieve a list of all books",
          "Access detailed information about specific books",
          "Add new books to the inventory",
          "Update book details",
          "Remove books from the inventory"
        ],
        "contribution": "Developed the entire API from scratch, including setting up the Node.js environment, configuring the database with Sequelize, creating routes for user authentication and book operations, and implementing middleware for security and validation.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/bookstore-api",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/bookstore-api",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "star",
        "title": "",
        "image": "",
        "description": "",
        "technologies": [],
        "features": [],
        "contribution": "",
        "links": [
          {
            "text": "Live",
            "href": "",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapp",
        "title": "Personal Website",
        "image": "web-profile-112.svg",
        "description": "Developed a sophisticated personal website to showcase professional background, skills, and portfolio projects in a visually appealing and user-friendly manner.",
        "technologies": [
          "HTML",
          "CSS",
          "JavaScript"
        ],
        "features": [
          "Fully Responsive Design ensuring seamless experience across all devices",
          "Interactive Portfolio Section with dynamic project filtering",
          "Contact Form integrated with EmailJS for direct communication",
          "Single Page Application (SPA) for smooth and fast navigation",
          "Animated Smooth Scrolling and Section Highlighting",
          "Lazy Loading for faster page load times",
          "Dark and Light Theme Toggle for enhanced user experience",
          "Multi-language Support [Indonesian, English]"
        ],
        "contribution": "Led the end-to-end design and development of a personal website, emphasizing a clean, modern design paired with an intuitive user experience. Leveraged core web technologies like HTML, CSS, and JavaScript to build a fully responsive and interactive site. Added advanced features such as theme toggling between dark and light modes, and multi-language support to cater to a broader audience. Integrated EmailJS for real-time communication and optimized performance with lazy loading. Deployed and maintained the site using GitHub Pages, ensuring continuous availability and ease of updates.",
        "links": [
          {
            "text": "Live",
            "href": "https://arizdn234.github.io/arz-portfolio-112",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/arz-portfolio-112",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapp",
        "title": "Django User Authentication Project",
        "image": "auth-django.svg",
        "description": "A simple application using Django for managing user authentication, including registration, login, and authentication via Google, Facebook, and Github accounts.",
        "technologies": [
          "Django",
          "Python",
          "OAuth",
          "Google API",
          "Facebook API",
          "Github API"
        ],
        "features": [
          "User Registration",
          "User Login",
          "Login/Registration with Google Account",
          "Login/Registration with Facebook Account",
          "Login/Registration with Github Account"
        ],
        "contribution": "Implemented a Django-based authentication system, including OAuth integration for Google, Facebook, and Github.",
        "links": [
          {
            "text": "Live",
            "href": "",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/user-auth-python",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapp",
        "title": "User Authentication with Google Account (Node.js)",
        "image": "auth-js.svg",
        "description": "This project demonstrates user authentication using a Google account with Node.js, Express, and Passport.",
        "technologies": [
          "Node.js",
          "Express",
          "Passport",
          "Google OAuth",
          "EJS",
          "Express Session"
        ],
        "features": [
          "User Authentication using Google Account",
          "Session Management with Express Session",
          "OAuth Authentication with Passport",
          "Dynamic Views using EJS",
          "Google OAuth Implementation for Login"
        ],
        "contribution": "Developed Google OAuth-based authentication features, including integration with Passport and session management using Express Session.",
        "links": [
          {
            "text": "Live",
            "href": "",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/user-auth-with-google-account-js",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapp",
        "title": "Kanban App - Modern Theme",
        "image": "kanban-app.svg",
        "description": "Kanban App is a web-based task management application with a modern theme. It allows users to create, edit, move, and delete tasks on a Kanban board with three columns: Backlog, On Progress, and Done.",
        "technologies": [
          "HTML",
          "CSS",
          "JavaScript"
        ],
        "features": [
          "Create New Task: Enter a task name and click the 'Create' button to add it to the Backlog column.",
          "Edit Task: Double-click on the task name to edit it.",
          "Move Task: Use the 'move' button to move tasks between columns.",
          "Delete Task: Click the 'delete' button to remove a task from the board.",
          "Drag and Drop: Drag and drop tasks between columns."
        ],
        "contribution": "Added important features like drag and drop to move tasks between columns. Fixed several bugs in the previous version. Optimize code to improve application performance. Improved the user interface to be more responsive and intuitive.",
        "links": [
          {
            "text": "Live",
            "href": "https://arizdn234.github.io/Kanban-App/",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/Kanban-App/",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapp",
        "title": "Music Fetch (Express, Multer)",
        "image": "music-fetch.svg",
        "description": "Music Fetch is a Nodejs web application for managing music data with CRUD operations using Expressjs and Multer for file handling. This application provides a simple interface for efficient music data manipulation.",
        "technologies": [
          "Node.js",
          "Express.js",
          "Multer",
          "JSON"
        ],
        "features": [
          "CRUD operations for music data in JSON",
          "File uploads with Multer",
          "Intuitive user interface",
          "Efficient data and request processing"
        ],
        "contribution": "Developed Music Fetch using Node.js and Express.js for music data management and file uploads with Multer. Focused on creating an efficient application architecture and a user-friendly interface.",
        "links": [
          {
            "text": "Live",
            "href": "",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/Music-fetch",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapp",
        "title": "Modern Business Landing Page Project",
        "image": "business-landing-page.svg",
        "description": "This project aims to replicate and enhance the quality of a landing page designed visually in Figma. By utilizing modern web technologies such as HTML, CSS, and JavaScript, we are developing a landing page that not only reflects the set design but also adds touches of additional functionality and aesthetics. The focus is on creating visually engaging elements, smooth interactions, and a pleasant user experience. The page is also designed to be responsive and optimized for various devices, with the implementation of smooth animations and transitions that enhance the overall visual experience.",
        "technologies": [
          "HTML",
          "CSS",
          "JavaScript"
        ],
        "features": [
          "Section A: Header & Banner",
          "Section B: Product Features 1 & Features",
          "Section C: About & Pricing",
          "Section D: Contact & Footer"
        ],
        "contribution": "Responsible for working on Header & Banner, Product Features 1 & Features, About & Pricing, and Contact & Footer. Additionally, handled transitions, animations, and smooth scroll on the landing page. We collaborated to improve the style, functionality, and features of the landing page, and integrated changes into the GitHub repository.",
        "links": [
          {
            "text": "Live",
            "href": "https://arizdn234.github.io/modern-business-landing-pages/",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/modern-business-landing-pages",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapp",
        "title": "Task Tracker Plus",
        "image": "ttp.png",
        "description": "Task Tracker Plus is a monolithic application built using Go (Golang) for managing study schedules. It provides REST APIs with full CRUD capabilities for managing users, tasks, and categories, and follows the MVC (Model-View-Controller) architecture.",
        "technologies": [
          "Go (Golang)",
          "REST API",
          "MVC Architecture"
        ],
        "features": [
          "Backend Development (Server): Developed and implemented REST APIs to manage Users, Tasks, and Categories with full CRUD operations and user authentication.",
          "Frontend Development (Client): Built user interfaces with MVC pattern including login, registration, dashboard, and management pages for tasks and categories."
        ],
        "contribution": "I contributed to the backend development by implementing REST APIs for managing users, tasks, and categories. I ensured secure user authentication and full CRUD functionality using the Go programming language and MVC architecture.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/Final-Course-Project-TTP",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/Final-Course-Project-TTP",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapp",
        "title": "AI-Enhanced CSV Query Web Application",
        "image": "",
        "description": "This web application allows users to interact with CSV data using AI models. Users can log in, view the parsed CSV data, and ask questions answered by AI models, integrating Google’s Gemini and Hugging Face’s Tapas for data-driven responses.",
        "technologies": [
          "Go (Golang)",
          "Gin Web Framework",
          "Google Generative AI Go SDK",
          "Hugging Face API for Tapas model",
          "Google Tapas Model",
          "Google Gemini Model"
        ],
        "features": [
          "User Authentication and Verification: Secure login system with a verification step.",
          "CSV Data Parsing and Display: Reads CSV files, parses them into a map format, and displays column data with example rows.",
          "AI Model Integration: Uses Hugging Face’s Tapas model to answer natural language queries from CSV data and Google’s Gemini model to provide conversational recommendations.",
          "Dynamic Interaction: Users can ask questions to AI for insights or recommendations based on CSV data."
        ],
        "contribution": "I developed the web application to read CSV data, implement AI models for answering questions and providing recommendations, and manage user interactions effectively using Go and related technologies.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/AI-Enhanced-CSV-Query-Web-Application",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/AI-Enhanced-CSV-Query-Web-Application",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapp",
        "title": "Integrated E-Commerce Platform",
        "image": "uni-sell-1.svg",
        "description": "Our e-commerce platform is a comprehensive solution designed to facilitate both physical and digital product sales. It features a robust backend built with Laravel, a dynamic frontend developed with Vue.js, and specialized microservices handled by Express.js. The platform is containerized using Docker for consistent deployment and scalability. Key functionalities include product management, real-time inventory tracking, secure checkout, payment processing, and user reviews. This architecture ensures a scalable, maintainable, and user-friendly experience for managing and purchasing products online.",
        "technologies": [
          "Laravel (PHP Framework)",
          "Vue.js (JavaScript Framework)",
          "Express.js (Node.js Framework)",
          "Docker (Containerization)",
          "MySQL (Database)"
        ],
        "features": [
          "Product Catalog: Comprehensive management of product listings and categories.",
          "Shopping Cart and Checkout: Real-time cart updates, secure checkout, and multiple payment gateways.",
          "Payment Integration: Supports Stripe, PayPal, and other payment processors.",
          "Order and Inventory Management: Real-time order tracking and automatic inventory updates.",
          "Review and Rating System: Allows user reviews and ratings with moderation features."
        ],
        "contribution": "I developed the integrated e-commerce platform, implementing Laravel for backend services, Vue.js for frontend, and Express.js for API microservices. I also managed Docker containerization for consistent deployment environments and integrated various technologies to ensure scalability and maintainability.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/uni-sell",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/uni-sell",
            "class": "btn btn-sm btn-white"
          }
        ]
      },      
      {
        "name": "webapp",
        "title": "",
        "image": "",
        "description": "",
        "technologies": [],
        "features": [],
        "contribution": "",
        "links": [
          {
            "text": "Live",
            "href": "",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapi",
        "title": "Authentication System (Golang, Gin)",
        "image": "web-api-default.svg",
        "description": "A user authentication system built with the Gin framework in Golang, featuring JWT-based authorization and CRUD operations for user data using SQLite and GORM.",
        "technologies": [
          "Golang",
          "Gin Framework",
          "GORM",
          "SQLite",
          "JWT",
          "Ginkgo",
          "Gomega"
        ],
        "features": [
          "JWT-based Authentication and Authorization",
          "Password Hashing for Secure Data Storage",
          "SQLite Database with GORM ORM",
          "Comprehensive CRUD Operations for User Management",
          "Unit Testing with Ginkgo and Gomega",
          "Modular Project Structure with Clear Separation of Concerns",
          "RESTful API Endpoints with Secure Access Controls",
          "User Session Management with Cookie-based JWT Tokens"
        ],
        "contribution": "Designed and implemented a robust authentication and user management system in Golang using the Gin framework. Key contributions include developing JWT-based authentication for secure access control, integrating SQLite with GORM for effective database management, and setting up comprehensive testing frameworks (Ginkgo and Gomega) to ensure code reliability. Structured the project to follow best practices with modular components, ensuring maintainability and scalability.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/crud-users-and-login-system-with-gin",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/crud-users-and-login-system-with-gin",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapi",
        "title": "Authentication System (Golang)",
        "image": "web-api-default.svg",
        "description": "A comprehensive user management system that includes login, registration, logout, and CRUD operations for user data, using JWT for secure access.",
        "technologies": [
          "Golang",
          "Gin Framework",
          "GORM",
          "SQLite",
          "JWT",
          "Ginkgo",
          "Gomega"
        ],
        "features": [
          "JWT-based Authentication and Authorization",
          "Password Hashing for Secure Data Storage",
          "SQLite Database with GORM ORM",
          "CRUD Operations for User Data",
          "Comprehensive Testing with Ginkgo and Gomega",
          "Server Setup with Routing and Middleware",
          "Database Migration Management"
        ],
        "contribution": "Developed a scalable and secure user management system with JWT-based authentication, comprehensive CRUD operations, and ensured code quality through testing frameworks.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/crud-users-with-login-system",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/crud-users-with-login-system",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapi",
        "title": "Bookstore REST API",
        "image": "web-api-default.svg",
        "description": "A robust and versatile Nodejs-based RESTful API designed to manage a bookstore, providing endpoints for user account management, and CRUD operations for books.",
        "technologies": [
          "Node.js",
          "Express",
          "PostgreSQL",
          "Sequelize",
          "bcryptjs",
          "jsonwebtoken"
        ],
        "features": [
          "User account registration and login",
          "Retrieve a list of all books",
          "Access detailed information about specific books",
          "Add new books to the inventory",
          "Update book details",
          "Remove books from the inventory"
        ],
        "contribution": "Developed the entire API from scratch, including setting up the Node.js environment, configuring the database with Sequelize, creating routes for user authentication and book operations, and implementing middleware for security and validation.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/bookstore-api",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/bookstore-api",
            "class": "btn btn-sm btn-white"
          }
        ]
      },  
      {
        "name": "webapi",
        "title": "B2C E-Commerce API (Node.js)",
        "image": "web-api-default.svg",
        "description": "A back-end e-commerce API for a B2C application built using Nodejs, Prisma, Express, and PostgreSQL. This API handles product management, user authentication, shopping cart management, order processing, and payment handling.",
        "technologies": ["Node.js", "Prisma", "Express", "PostgreSQL", "JWT Authentication"],
        "features": [
          "User Registration and Login",
          "Product Management (CRUD operations)",
          "User Management for Admins",
          "Order Management",
          "Payment Processing",
          "Search and Filtering Products",
          "Shopping Cart Management"
        ],
        "contribution": "Developed and integrated RESTful API endpoints for various e-commerce functionalities. Implemented user authentication, product management, order handling, and payment processing. Set up PostgreSQL database schema and Prisma ORM for data modeling.",
        "links": [
          {
            "text": "Live",
            "href": "https://ecommerce-api-gray.vercel.app/",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/ecommerce-api",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapi",
        "title": "Hotel Mawar Indah Availability API",
        "image": "web-api-default.svg",
        "description": "Hotel Mawar Indah Availability API is a backend service that provides information about hotel room availability. This API allows clients to check room availability, make reservations, cancel reservations, and get detailed room information.",
        "technologies": [
          "Go (Golang) v1.22",
          "Gin Web Framework",
          "GORM",
          "PostgreSQL"
        ],
        "features": [
          "Room Availability Check: Clients can check the availability of hotel rooms that are currently unbooked.",
          "Room Reservation: Clients can make reservations for available hotel rooms.",
          "Reservation Cancellation: Clients can cancel reservations that have been made.",
          "Room Information: Clients can obtain detailed information about hotel rooms, such as facilities, prices, and more."
        ],
        "contribution": "I contributed by developing the core backend functionality for checking room availability, handling room reservations, and implementing the reservation cancellation logic using Go and Gin framework. Additionally, I integrated the GORM ORM for seamless interaction with the PostgreSQL database and ensured the API adheres to best practices for performance and security.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/Hotel-Mawar-Indah-Availability-API",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/Hotel-Mawar-Indah-Availability-API",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "webapi",
        "title": "TransactHub",
        "image": "web-api-default.svg",
        "description": "TransactHub is a backend application built with Node.js and Express that handles user authentication, transactions, and item data management using MySQL and Sequelize ORM.",
        "technologies": [
          "Node.js",
          "Express",
          "MySQL",
          "Sequelize"
        ],
        "features": [
          "User Authentication: Handles user login, registration, and token-based authentication.",
          "Dashboard Management: Provides data for user-specific dashboard views.",
          "Item Management: Handles CRUD operations for items.",
          "Transaction Handling: Manages transactions between users.",
          "User Management: Handles user-related data operations."
        ],
        "contribution": "I contributed by developing backend functionalities, implementing RESTful API endpoints for user authentication, item management, transactions, and user-related operations using Node.js, Express, and Sequelize.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/TransactHub",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/TransactHub",
            "class": "btn btn-sm btn-white"
          }
        ]
      },          
      {
        "name": "webapi",
        "title": "",
        "image": "",
        "description": "",
        "technologies": [],
        "features": [],
        "contribution": "",
        "links": [
          {
            "text": "Live",
            "href": "",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "other",
        "title": "Snake Game",
        "image": "snake-game.svg",
        "description": "A snake game where players control a snake to eat items, avoid bombs, and achieve the highest score.",
        "technologies": [
          "HTML",
          "CSS",
          "JavaScript",
          "Local Storage"
        ],
        "features": [
          "3 Difficulty Levels: Easy, Medium, Hard",
          "Leaderboard for Top 5 Players",
          "Various Items with Specific Effects",
          "Pause, Play, and Replay Features",
          "Sound Effects and Music",
          "Player data stored in local storage"
        ],
        "contribution": "Developed game logic, designed the user interface, and implemented the leaderboard and player data storage.",
        "links": [
          {
            "text": "Live",
            "href": "https://arizdn234.github.io/webgame-snake-game/",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/webgame-snake-game",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "other",
        "title": "Smart Home Energy Management System CLI",
        "image": "",
        "description": "Smart Home Energy Management System CLI is a command-line tool that allows users to interact with CSV data, ask questions, and get AI-driven recommendations using Google's TAPAS model and Mistral AI's Mixtral model via the Hugging Face API.",
        "technologies": [
          "Go (Golang)",
          "Google TAPAS model",
          "Mistral AI Mixtral model",
          "Hugging Face API"
        ],
        "features": [
          "CSV Parsing: Reads and processes data from a CSV file to provide insights.",
          "AI-Powered Answers: Uses Google's TAPAS model to answer questions about tabular data.",
          "AI Recommendations: Provides recommendations using Mistral AI's Mixtral model."
        ],
        "contribution": "I developed the CLI tool to read CSV data, implement AI models for answering questions and providing recommendations, and manage user interactions effectively using Go.",
        "links": [
          {
            "text": "Live",
            "href": "https://github.com/arizdn234/Smart-Home-Energy-Management-System-CLI",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "https://github.com/arizdn234/Smart-Home-Energy-Management-System-CLI",
            "class": "btn btn-sm btn-white"
          }
        ]
      },
      {
        "name": "other",
        "title": "",
        "image": "",
        "description": "",
        "technologies": [],
        "features": [],
        "contribution": "",
        "links": [
          {
            "text": "Live",
            "href": "",
            "class": "btn btn-sm"
          },
          {
            "text": "Github",
            "href": "",
            "class": "btn btn-sm btn-white"
          }
        ]
      }
    ]
  },
  "contact": {
    "title": "Contact Me",
    "description": "Please contact me to offer a job and discuss about software development.",
    "form": {
      "inputs": [
        {
          "type": "text",
          "placeholder": "Your Name",
          "name": "Name",
          "required": true
        },
        {
          "type": "email",
          "placeholder": "Your Email",
          "name": "Email",
          "required": true
        },
        {
          "type": "text",
          "placeholder": "Subject",
          "name": "Subject",
          "required": true
        }
      ],
      "textarea": {
        "placeholder": "Message",
        "name": "Message",
        "required": true
      },
      "submitButton": {
        "text": "Send",
        "class": "btn btn-white"
      }
    }
  }
}